//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Contoso_FAS_Testing
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class FormTestCoded_Old : WebTest
    {

        public FormTestCoded_Old()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://localhost:50274/");
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule3 = new ValidationRuleFindText();
                validationRule3.FindText = "First: <br/>";
                validationRule3.IgnoreCase = false;
                validationRule3.UseRegularExpression = false;
                validationRule3.PassIfTextFound = true;
                request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule3.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule4 = new ValidationRuleFindText();
                validationRule4.FindText = "Last: <br/>";
                validationRule4.IgnoreCase = false;
                validationRule4.UseRegularExpression = false;
                validationRule4.PassIfTextFound = true;
                request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule4.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule5 = new ValidationRuleFindText();
                validationRule5.FindText = "Email: <br/>";
                validationRule5.IgnoreCase = false;
                validationRule5.UseRegularExpression = false;
                validationRule5.PassIfTextFound = true;
                request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule5.Validate);
            }
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://localhost:50274/Default.aspx");
            request2.ExpectedResponseUrl = "http://localhost:50274/Default?firstName=Kevin&lastName=Tuttle&email=ktuttle@ivis" +
                "ion.com&submit=";
            request2.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:50274/"));
            request2.QueryStringParameters.Add("firstName", "Kevin", false, false);
            request2.QueryStringParameters.Add("lastName", "Tuttle", false, false);
            request2.QueryStringParameters.Add("email", "ktuttle@ivision.com", false, false);
            request2.QueryStringParameters.Add("submit", "", false, false);
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule6 = new ValidationRuleFindText();
                validationRule6.FindText = "First: Kevin<br/>";
                validationRule6.IgnoreCase = false;
                validationRule6.UseRegularExpression = false;
                validationRule6.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule6.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule7 = new ValidationRuleFindText();
                validationRule7.FindText = "Last: Tuttle<br/>";
                validationRule7.IgnoreCase = false;
                validationRule7.UseRegularExpression = false;
                validationRule7.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule7.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule8 = new ValidationRuleFindText();
                validationRule8.FindText = "Email: ktuttle@ivision.com<br/>";
                validationRule8.IgnoreCase = false;
                validationRule8.UseRegularExpression = false;
                validationRule8.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule8.Validate);
            }
            ExtractText extractionRule1 = new ExtractText();
            extractionRule1.StartsWith = "First: ";
            extractionRule1.EndsWith = "<br/>";
            extractionRule1.IgnoreCase = false;
            extractionRule1.UseRegularExpression = false;
            extractionRule1.Required = true;
            extractionRule1.ExtractRandomMatch = false;
            extractionRule1.Index = 0;
            extractionRule1.HtmlDecode = true;
            extractionRule1.SearchInHeaders = false;
            extractionRule1.ContextParameterName = "FirstName";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            ExtractText extractionRule2 = new ExtractText();
            extractionRule2.StartsWith = "Last: ";
            extractionRule2.EndsWith = "<br/>";
            extractionRule2.IgnoreCase = false;
            extractionRule2.UseRegularExpression = false;
            extractionRule2.Required = true;
            extractionRule2.ExtractRandomMatch = false;
            extractionRule2.Index = 0;
            extractionRule2.HtmlDecode = true;
            extractionRule2.SearchInHeaders = false;
            extractionRule2.ContextParameterName = "LastName";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            ExtractText extractionRule3 = new ExtractText();
            extractionRule3.StartsWith = "Email: ";
            extractionRule3.EndsWith = "<br/>";
            extractionRule3.IgnoreCase = false;
            extractionRule3.UseRegularExpression = false;
            extractionRule3.Required = true;
            extractionRule3.ExtractRandomMatch = false;
            extractionRule3.Index = 0;
            extractionRule3.HtmlDecode = true;
            extractionRule3.SearchInHeaders = false;
            extractionRule3.ContextParameterName = "Email";
            request2.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule3.Extract);
            yield return request2;
            request2 = null;
        }
    }
}
